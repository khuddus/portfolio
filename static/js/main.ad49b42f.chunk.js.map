{"version":3,"sources":["pages/Introduction.js","pages/Philosophy.js","pages/Skills.js","pages/Projects.js","pages/Contact.js","App.js","serviceWorker.js","index.js","images/train.png"],"names":["Introduction","react_default","a","createElement","className","src","alt","App","_useState","useState","_useState2","Object","slicedToArray","count","setCount","_useState3","_useState4","showMessage","setShowMessage","_useState5","_useState6","trainMargin","setTrainMargin","pages","Philosophy","Skills","Projects","Contact","useEffect","document","title","concat","changeClass","onClick","CSSTransition","in","timeout","classNames","onExited","pagesCount","length","distancePerEachPage","parseInt","console","log","unmountOnExit","logo","style","marginLeft","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ad49b42f.chunk.js","sourcesContent":["import React from 'react';\nimport './Introduction.css';\n\nfunction Introduction() {\n\n    return (\n\n        <div className=\"page1\">\n            <div className=\"introduction\">\n                <header className=\"App-header\">\n                    <div className='row'>\n                        <div >\n                            <img className='intro-image' src='https://avatars0.githubusercontent.com/u/3508305?s=460&v=4' alt='Abdul Khuddus' />\n                        </div>\n                        <div className='text'>\n                            <h1>Hey I'm Abdul Khuddus</h1>\n                            <h2>A Full stack engineer</h2>\n                        </div>\n                    </div>\n                </header>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default Introduction;\n","import React from 'react'; \n \n\nfunction Introduction() {\n   \n    return (\n        <div className=\"introduction\">\n\n            <div className=\"page1\">\n                <header className=\"App-header\">\n                    <h1>My Philosophy</h1>\n                    <h3>General</h3>\n                        <p>Discipline, Loyalty, and Quality are the three basic essentials of good social life.</p>\n                      <h3>Programming</h3>\n                     <p>Don't program for output. Program for people. People who you work with. People who might use your product. </p>\n                        <p>Program for creating impact. Not just for salary</p>\n                     \n\n                </header>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default Introduction;\n","import React from 'react'; \n \n\nfunction Introduction() {\n   \n    return (\n        <div className=\"introduction\">\n\n            <div className=\"page1\">\n                <header className=\"App-header\">\n                    <h1>Skills</h1>\n                    \n                    <h3>Web</h3>\n                         <p>PHP Yii2 framework</p>\n                        <p>React JS, Node JS</p>\n                         <p>Spring Boot</p>\n                     <h3>Mobile</h3>\n                        <p>Android SDK</p>\n                        <p>React Native</p>\n                    \n                </header>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default Introduction;\n","import React from 'react'; \n \n\nfunction Introduction() {\n   \n    return (\n        <div className=\"introduction\">\n\n            <div className=\"page1\">\n                <header className=\"App-header\">\n                    <h1>Projects</h1>\n                    \n                         <p>Dream Homes Magazine - Web and Android</p>\n                        <p>Zee Cabs - Cab booking service - Android</p>\n                        <p>Quran Gateway - Web Portal to access multiple translations of Quran</p>\n                        <p>Vivekapatham - Mobile version of a blog</p>\n                          <p>AK Exams - An exam conducting software</p>\n                        \n\n                </header>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default Introduction;\n","import React from 'react'; \n \n\nfunction Introduction() {\n   \n    return (\n        <div className=\"introduction\">\n\n            <div className=\"page1\">\n                <header className=\"App-header\">\n                    <h1>Contact me</h1>\n                    \n                    <address>\n                        <pre>\n                            Abdul Khuddus,\n                            Gurgaon,\n                            India\n                        </pre>\n                    </address>\n\n                </header>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default Introduction;\n","import React, { useState, useEffect } from 'react';\nimport {\n  CSSTransition,\n} from 'react-transition-group';\nimport logo from './images/train.png';\nimport './App.css';\nimport Introduction from './pages/Introduction';\nimport Philosophy from './pages/Philosophy';\nimport Skills from './pages/Skills';\nimport Projects from './pages/Projects';\nimport Contact from './pages/Contact';\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [showMessage, setShowMessage] = useState(true);\n  const [trainMargin, setTrainMargin] = useState(0);\n\n  const pages = [\n    Introduction,\n    Philosophy,\n    Skills,\n    Projects,\n    Contact\n  ]\n  useEffect(() => {\n\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n\n  });\n  const changeClass = () => {\n    setShowMessage(!showMessage);\n\n  };\n  // const setDirection = ({ keyCode }) => {\n  //   // Horizontal keys\n  //   if(keyCode === 37 || keyCode === 39){\n  //     changeClass();\n  //   }\n  //  };\n  return (\n    <div className=\"App\"  onClick={changeClass}  >\n      <div className='pageContainer'>\n        <CSSTransition\n          in={showMessage}\n          timeout={300}\n          classNames=\"container\"\n          onExited={() => {\n            const pageWidth = 80;\n            const pagesCount = pages.length;\n            const distancePerEachPage = parseInt(pageWidth / (pagesCount - 1));\n            \n            setTrainMargin(((count + 1) % pagesCount) * distancePerEachPage);\n            console.log(count, count + 1, ((count + 1) % pagesCount))\n            setCount((count + 1) % pages.length);\n\n            setShowMessage(!showMessage);\n\n          }}\n          unmountOnExit\n        >\n          {pages[parseInt(count)]}\n        </CSSTransition>\n      </div>\n      <footer>\n        <CSSTransition\n          in={showMessage}\n          timeout={300}\n          classNames=\"train\"\n         \n          unmountOnExit\n        >\n\n          <img src={logo} onClick={changeClass} className=\"train\" style={{ marginLeft: trainMargin + 'vw' }} alt=\"logo\" />\n        </CSSTransition>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/train.6d045735.png\";"],"sourceRoot":""}